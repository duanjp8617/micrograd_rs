use micrograd::*;

fn main() {
    let xs: Vec<Vec<Value>> = XS
        .into_iter()
        .map(|xy| vec![xy[0].into(), xy[1].into()])
        .collect();
    let ys = [
        -1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, -1, 1, 1, 1, 1, -1,
        -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1,
        1, -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1,
        1, 1, 1, 1, -1, 1, -1, -1, -1, 1, 1, -1, -1, 1, 1, 1, 1, 1, 1, -1, 1, 1, -1,
    ];
    let ys: Vec<Value> = ys.into_iter().map(|y| y.into()).collect();

    let mlp = MLP::new(2, &[16, 16, 1]);
    for (p, new_data) in mlp.parameters().iter().zip(MLP_PARAMS.iter()) {
        p.set_data(*new_data);
    }

    let loss = || {
        let scores: Vec<_> = xs
            .iter()
            .map(|x| mlp.call(&x[..]).into_iter().next().unwrap())
            .collect();

        let losses: Vec<_> = ys
            .iter()
            .zip(scores.iter())
            .map(|(yi, scorei)| (((-yi.clone()) * scorei.clone()) + 1.into()).relu())
            .collect();

        let data_loss = losses
            .iter()
            .fold(Value::new(0.0), |acc, elem| acc + elem.clone())
            * (Value::new(1.0) / Value::from(losses.len() as i32));

        let alpha = Value::new(1e-4);
        let reg_loss = alpha
            * mlp
                .parameters()
                .iter()
                .map(|p| p.clone() * p.clone())
                .fold(Value::new(0.0), |acc, elem| acc + elem);
        let total_loss = data_loss + reg_loss;

        let accuracy_num = ys
            .iter()
            .zip(scores.iter())
            .map(|(yi, scorei)| {
                if (yi.data() > 0.0) == (scorei.data() > 0.0) {
                    1.0
                } else {
                    0.0
                }
            })
            .fold(0.0, |accu, elem| accu + elem);

        let accuracy = accuracy_num / scores.len() as f64;

        (total_loss, accuracy_num, accuracy)
    };

    for k in 0..100 {
        let (total_loss, accurate_num, accuracy) = loss();

        mlp.zero_grad();
        total_loss.backward();

        let learning_rate = 1.0 - 0.9 * f64::from(k) / 100.0;
        for p in mlp.parameters() {
            p.set_data(p.data() - learning_rate * p.gradient());
        }

        println!(
            "step {k} loss {}, accurate_num {}, accuracy {}%",
            total_loss.data(),
            accurate_num,
            accuracy * 100.0
        );
    }
}

const MLP_PARAMS: [f64; 337] = [
    0.23550571390294128,
    0.06653114721000164,
    0.0,
    -0.26830328150124894,
    0.1715747078045431,
    0.0,
    -0.6686254326224383,
    0.6487474938152629,
    0.0,
    -0.23259038277158273,
    0.5792256498313748,
    0.0,
    0.8434530197925192,
    -0.3847332240409951,
    0.0,
    0.9844941451716409,
    -0.5901079958448365,
    0.0,
    0.31255526637777775,
    0.8246106857787521,
    0.0,
    -0.7814232047574572,
    0.6408752595662697,
    0.0,
    -0.20252189189007108,
    -0.8693137391598071,
    0.0,
    0.39841666323128555,
    -0.3037961142013801,
    0.0,
    -0.19282493884310759,
    0.6032250931493106,
    0.0,
    0.6001302646227185,
    0.32749776568749045,
    0.0,
    0.6650130652363544,
    0.1889136153241595,
    0.0,
    -0.07813264062433589,
    0.9151267732861252,
    0.0,
    0.5914405264235476,
    -0.3725442040076463,
    0.0,
    0.3810827422406471,
    0.8301999957053683,
    0.0,
    -0.08568482691922008,
    -0.4702876239420326,
    -0.598037011209763,
    -0.8653994554527067,
    0.05088685407468296,
    0.23734644010332318,
    0.15459549089529045,
    -0.9122391928398941,
    -0.18505999501786086,
    0.30584552737905213,
    0.23949109098065002,
    0.35119774963171047,
    0.26999576683073867,
    -0.6059558972032326,
    -0.4301483303818887,
    -0.09534359352124744,
    0.0,
    0.833061635489087,
    0.5964776511293395,
    -0.37143418174288434,
    0.5908148577342738,
    0.22158648570764017,
    -0.1356625769718156,
    0.5808552090645627,
    0.09921848842252134,
    0.5519936528601597,
    0.11082037875863104,
    0.2915133730664663,
    0.6968596263439943,
    -0.572699001261544,
    0.94892201097003,
    0.05815161059370322,
    0.05689619757216291,
    0.0,
    0.5506426045691593,
    -0.8991315551643992,
    -0.01068087363780501,
    0.47299771880745967,
    -0.08962899486130538,
    0.797578856715021,
    0.6099780726775426,
    -0.024825326467644793,
    0.5043619819611675,
    0.45774158735550596,
    -0.29478212096243595,
    0.11675968465796172,
    0.1379511601427985,
    -0.48542469349832285,
    -0.8664235814101062,
    -0.7390189923668276,
    0.0,
    -0.8822004511411428,
    -0.6597694707506181,
    0.6399602752689382,
    -0.6162690156778836,
    0.9053331545059524,
    0.667051974729419,
    0.7551658608563221,
    0.10907067581950436,
    -0.14588865117400673,
    0.2127856122995495,
    0.7622713432716846,
    0.8620382404752289,
    -0.1401108907535058,
    0.48216393547230973,
    -0.6888711593157701,
    0.2678404966193193,
    0.0,
    -0.3053994271093132,
    -0.8631814836201597,
    -0.29515687142070823,
    0.35372633701181444,
    0.20192101990676137,
    0.43475517949093345,
    -0.6169565150718037,
    -0.03186709594911474,
    0.22634427889578657,
    0.10564268012149869,
    -0.6805473384045992,
    0.422794461121468,
    0.6853554447554182,
    -0.21409905516555439,
    -0.6109356015626146,
    0.5254595422399804,
    0.0,
    0.24979744746643195,
    -0.16494497754636983,
    -0.6818144661499881,
    -0.06157981422579417,
    0.3953098897513252,
    -0.3566554480884392,
    -0.9395269671087605,
    0.19989246416270823,
    0.28261231537882425,
    -0.3861199056619302,
    0.8859519356381196,
    0.09224139623540206,
    0.5616028368830122,
    0.7479929232402773,
    -0.5498104256800536,
    -0.38944426340050686,
    0.0,
    -0.11986910432370723,
    -0.2418861692296186,
    0.27309902578900536,
    -0.7118613477995166,
    0.640699986750376,
    0.5251887402876205,
    -0.5265767665889542,
    0.6262237833195563,
    -0.8283374538902439,
    0.38807184998509303,
    -0.315003423604574,
    0.6825221766793921,
    -0.44958052796535997,
    0.054321569495217936,
    0.18838831645682874,
    -0.22248475258825984,
    0.0,
    -0.7209187740512764,
    0.7176790825016579,
    0.008555182533857453,
    -0.24243019229834561,
    0.27898488110769337,
    -0.7726321568042522,
    -0.5139485701725583,
    -0.8954946921521039,
    0.581615741803986,
    -0.5750613904646755,
    0.06993657839881884,
    0.8578625660652908,
    0.15993906511777078,
    -0.7940725880755064,
    0.7128617267763828,
    0.9005136363586974,
    0.0,
    0.01164370432983386,
    0.18191594886177542,
    0.28846645419632666,
    0.28220903218440285,
    -0.007467712517625236,
    -0.9683122463720533,
    -0.703733854503761,
    0.9555727255393986,
    0.8304099868721302,
    0.29860725600901694,
    0.23053684069095115,
    0.8609716364376814,
    0.470379750754194,
    -0.958287981521013,
    0.5814512996793573,
    -0.6753502452813329,
    0.0,
    0.5036443505111738,
    0.2955698675260916,
    0.4217229281756927,
    0.5984472102024547,
    -0.07808249126985456,
    0.6103717000192679,
    0.34645800749824374,
    0.504683663142057,
    -0.9498847321986592,
    -0.14743838678191312,
    0.5844330583547752,
    -0.7950857611747761,
    -0.6601994025531952,
    0.43550433241342956,
    0.8151878759155218,
    0.2604257711713296,
    0.0,
    0.7177690445444254,
    -0.686154027517816,
    -0.6063064618924185,
    -0.843421963461304,
    0.10008562568600432,
    0.8240605653030353,
    0.15495085113716178,
    -0.5089384775906294,
    0.8286765053073863,
    -0.8822610314096722,
    -0.5451509553109077,
    0.5761953058198175,
    -0.3434024177268147,
    0.10319781991345178,
    -0.05383238577004734,
    -0.6116507489401757,
    0.0,
    -0.8524536182338882,
    0.6964865423661555,
    0.32268922233815234,
    -0.2781907279339124,
    0.16059637633929102,
    -0.9446155428863412,
    0.8742237211553019,
    0.3582002209547388,
    0.9042806512794279,
    -0.8816062876600146,
    0.10041983326299175,
    -0.7698683314750423,
    0.30407601555374275,
    -0.20349872174164796,
    -0.4433144849231998,
    0.12433118993925452,
    0.0,
    -0.4258729196203048,
    0.3790360826044181,
    -0.9859455101873194,
    0.7028423162448694,
    -0.40122067203805645,
    -0.25683960260938843,
    0.5346953520807405,
    -0.35517369191511716,
    0.5121727526610462,
    -0.8868545578539118,
    0.518934991832354,
    -0.8928025540682154,
    0.5236713643981046,
    0.6018056040412896,
    0.24634309741440386,
    -0.20561868737419142,
    0.0,
    -0.652542799532154,
    -0.0065261577446391605,
    0.3493423738090866,
    -0.6324860574376863,
    -0.8530409123740017,
    -0.6218486564139833,
    0.9327230982583281,
    0.2793857831208002,
    0.5689184786100774,
    -0.6840675708965678,
    -0.5558656769249497,
    0.20592862129017364,
    -0.8391389406223104,
    -0.5529892816922855,
    -0.6278982991453468,
    -0.9592572536299122,
    0.0,
    0.9196221821038293,
    0.045865737597233114,
    0.5127293960073278,
    -0.7914104355296121,
    0.848793948186239,
    -0.3571964013350297,
    -0.8965914398912116,
    0.4191281777225171,
    -0.01884218503850832,
    0.6545963733751365,
    -0.3484979864252389,
    0.554377859246435,
    0.1689761071111946,
    -0.3388547761206535,
    0.397274795414263,
    -0.7930174038445066,
    0.0,
    0.077052593637436,
    0.3936052761946094,
    -0.8761639684113867,
    0.37877479983298445,
    -0.20339223773668702,
    -0.9231467276681604,
    -0.2020186036807059,
    0.9605940825345125,
    -0.9182348746309268,
    0.22922046437756505,
    -0.13194342373337498,
    -0.08703882869490953,
    0.984078978320559,
    0.19426273589837106,
    0.2294204003823488,
    0.12301724420660465,
    0.0,
    0.9128783824023976,
    -0.820982404658368,
    0.9648285595338895,
    0.3470665940198512,
    0.5436156893249604,
    0.49097996014038525,
    -0.9353940167321961,
    -0.707696853463387,
    -0.543868634071563,
    0.24162175370353833,
    -0.6723901907230767,
    -0.5973053326809556,
    0.6457663814022516,
    -0.2271549182489696,
    -0.3223491002609964,
    -0.2532524374373504,
    0.0,
];

const XS: [[f64; 2]; 100] = [
    [1.12211461e+00, 8.14771734e-02],
    [-8.18829413e-01, 5.87900639e-02],
    [1.61370966e+00, -1.24645900e-01],
    [-9.23009184e-01, 3.65228899e-01],
    [1.43851462e-01, 4.43800492e-02],
    [1.64472466e-01, 1.17383457e-01],
    [1.33877062e+00, -2.38009933e-01],
    [8.71148615e-01, -4.22717587e-01],
    [1.83129946e+00, -1.41043828e-01],
    [4.87571202e-01, 6.39092830e-01],
    [3.74623511e-02, 4.23588090e-01],
    [-4.43916853e-01, 8.96739312e-01],
    [-8.12229494e-01, 9.12090924e-01],
    [1.63552312e+00, -3.49996760e-01],
    [4.73539037e-01, 9.57342599e-01],
    [7.53549316e-01, 6.23727143e-01],
    [2.64212818e-01, -2.42419828e-01],
    [1.42755726e+00, -3.72510358e-01],
    [-3.72356057e-01, 9.56691710e-01],
    [-9.61301967e-01, 3.26090112e-01],
    [7.80858468e-01, 7.97489402e-01],
    [9.16609029e-01, -4.27638438e-01],
    [1.04703809e+00, -5.44492470e-01],
    [-6.03630542e-02, 1.19609088e-01],
    [2.91895380e-02, 3.06838997e-01],
    [-3.95732255e-01, 8.96543895e-01],
    [-1.04645910e-01, 1.11788313e+00],
    [1.88110004e+00, 2.99202568e-01],
    [8.27408779e-01, 3.44977171e-01],
    [1.29777112e+00, -3.66543151e-01],
    [-6.76892847e-01, 8.55599574e-01],
    [5.29529953e-01, 9.47355941e-01],
    [-8.43802291e-01, 6.04739822e-01],
    [2.65984708e-01, 8.87321986e-01],
    [1.37403862e-01, 3.97856894e-01],
    [-9.10439360e-01, -9.70966409e-02],
    [1.33740031e+00, -3.67411974e-01],
    [1.02257719e+00, -3.97526493e-01],
    [1.02490132e+00, -5.48639298e-01],
    [-7.50895897e-01, 2.53287722e-01],
    [1.20281632e+00, 8.11538186e-02],
    [-4.69102122e-01, 7.80796219e-01],
    [7.40836677e-01, 4.59232537e-01],
    [7.86905117e-01, 7.66247461e-01],
    [-1.30051914e-01, 1.11938940e+00],
    [8.04023061e-01, -4.23154474e-01],
    [2.83303670e-01, -2.19440711e-01],
    [-7.11055396e-01, 7.11638805e-01],
    [3.02624521e-01, -9.33890861e-02],
    [8.07914632e-01, 3.36538326e-01],
    [-9.41626914e-01, 1.68018576e-01],
    [1.14081485e+00, -4.62897185e-01],
    [-1.57137522e-01, 9.32106642e-01],
    [1.71504370e+00, -1.83620088e-01],
    [3.72465754e-01, -1.26078412e-01],
    [-7.43095776e-01, 6.98951667e-01],
    [6.81424891e-01, 6.85634239e-01],
    [8.68612480e-01, -3.72786175e-01],
    [1.00229575e+00, 2.16874785e-01],
    [-1.02219391e+00, 3.97508213e-01],
    [-6.10762581e-01, 8.31171369e-01],
    [-7.76683047e-01, 6.43609323e-01],
    [1.10530001e+00, 2.19162811e-01],
    [-1.78904597e-01, 1.06959774e+00],
    [4.04983057e-01, 8.26478337e-01],
    [1.81457300e+00, 3.45253762e-02],
    [-7.91285627e-01, 2.00068809e-01],
    [1.98173149e+00, 4.60760535e-01],
    [7.32427956e-01, -3.99657543e-01],
    [2.11141647e+00, 1.80640708e-01],
    [2.16205598e+00, 4.94233819e-01],
    [8.96245420e-01, 4.61536063e-01],
    [3.73493759e-01, 1.04498301e+00],
    [5.84964554e-01, -3.21259841e-01],
    [1.76329788e-01, 1.97455719e-01],
    [1.09115646e-01, 4.81557011e-01],
    [2.97532748e-01, 9.95836387e-01],
    [9.60465720e-02, -4.62698630e-02],
    [4.74643637e-01, -1.05126474e-01],
    [1.11634711e+00, -4.15534373e-01],
    [5.53627588e-01, -4.23125821e-01],
    [1.89528099e-01, 1.01835655e+00],
    [1.94566914e+00, -9.53034040e-02],
    [-8.46266211e-02, 1.07262342e+00],
    [1.16858008e+00, -2.84810701e-02],
    [1.24468467e-01, 1.05725031e+00],
    [2.03389924e+00, 2.84729799e-01],
    [-2.80005380e-02, 1.70767639e-01],
    [7.40934813e-01, 4.14114383e-01],
    [7.93947034e-01, 5.59725800e-01],
    [8.68742625e-01, -5.30147199e-01],
    [1.61874435e+00, -3.25845287e-01],
    [1.42986564e+00, -4.73342103e-01],
    [1.97480435e+00, -1.77931622e-01],
    [1.85356347e+00, 3.42263958e-01],
    [1.74912164e+00, 2.83390247e-02],
    [-6.85668888e-01, 4.65356936e-01],
    [1.75237435e+00, 1.64520514e-01],
    [1.80789551e-01, -2.95417619e-04],
    [1.21082973e-01, 1.06555225e+00],
];
